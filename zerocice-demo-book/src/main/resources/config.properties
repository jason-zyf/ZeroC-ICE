#server properties
IceBox.InstanceName=MyAppIceBox 1
IceBox.InheritProperties=1
#所有服务初始化完成之后打印 xxx ready
IceBox.PrintServicesReady=MyAppIceBox 1
IceBox.ServiceManager.Endpoints=tcp -p 8866 -h localhost
#performance properties
Ice.ThreadPool.Server.Size=4
Ice.ThreadPool.Server.SizeMax=100
Ice.ThreadPool.Server.SizeWarn=40
Ice.ThreadPool.Client.Size=4
Ice.ThreadPool.Client.SizeMax=100
Ice.ThreadPool.Client.SizeWarn=40
#for system stronger
Ice.ACM.Client=300
Ice.ACM.Server=300
#log and trace
#表明日志存放在日志文件中，否则会在控制台输出日志
#Ice.LogFile=iceserver.log
Ice.PrintStackTraces=1
Ice.Trace.Retry=2
Ice.Trace.Network=2
Ice.Trace.ThreadPool=1
Ice.Trace.Locator=2
Ice.Warn.Connections=1
Ice.Warn.Dispatch=1
Ice.Warn.Endpoints=1
#service define begin
#IceBox.Service.name=entry_point [--key=value] [args]
#name定义service的名字，作为start方法的name的参数，必须是唯一的
#entry_point是上面MyServie的完整类名
#[--key=value]：被作为property属性,用于构建该服务的communicator,
#用来更加精确的控制每个Ice服务的性能调优,这里也可以使用--Ice.Config=xxx.cfg的方式从具体的配置文件中加载参数。
#另外，也可以用IceBox.InheriProperties=1的属性让所以Ice服务实例都使用IceBox的配置属性
#[args]作为传入start方法的参数，作为服务启动初始化参数
IceBox.Service.OnlineBook=com.ice.book.service.impl.OnlineBookImpl prop1=1 prop2=2 prop3=3
IceBox.Service.SMSService=com.ice.book.service.impl.SMSServiceImpl
OnlineBook.Endpoints=tcp -p 8000 -h localhost
SMSService.Endpoints=tcp -p 8001 -h localhost
#service end
#service load order
#配置多个服务的先后顺序
IceBox.LoadOrder=OnlineBook,SMSService
#service share communicator
IceBox.UseSharedCommunicator.OnlineBook=1
IceBox.UseSharedCommunicator.SMSService=1
#引入Registry组件后，需要以下配置 Ice Registry的协议 地址 端口
Ice.Default.Locator=IceGrid/Locator:tcp -h localhost -p 4061
OnlineBook.AdapterId=OnlineBookAdapter
SMSService.AdapterId=SMSServicesAdapter
